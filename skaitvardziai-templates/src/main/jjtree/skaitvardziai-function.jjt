options {
	UNICODE_INPUT = true;
	STATIC = false;
}

PARSER_BEGIN(SkaitvardziaiFunctionParser)
package eu.vytenis.parser;
public class SkaitvardziaiFunctionParser {}
PARSER_END(SkaitvardziaiFunctionParser)


SKIP : { " " | "\t" | "\n" | "\r" }

TOKEN: {
  < NULL: "null" >
  |
  < #LETTER: ["a" - "z", "A" - "Z", "_"] >
  |
  < #DIGIT : ["0" - "9"] >
  |
  < IDENTIFIER: <LETTER> (<LETTER> | <DIGIT>)* >
}


TOKEN: {
	< STRING_LITERAL: (<STRING_LITERAL_SINGLE_QUOTED> | <STRING_LITERAL_DOUBLE_QUOTED>) >
	|
	< #STRING_LITERAL_DOUBLE_QUOTED: "\"" (~["\""])* "\"" >
	|
	< #STRING_LITERAL_SINGLE_QUOTED: "'" (~["'"])* "'" >
  
}

TOKEN: {
	<INTEGER_LITERAL: <DIGIT> (<DIGIT>)* >
}

SimpleNode start() : {} 
{

  Call()
  { return jjtThis; }
}

void Call() : {} {
	<IDENTIFIER> "(" Arguments() ")"
}

void Arguments() : {} {
	Argument() ( "," Argument() )*
}

void Argument() : {} {
	<INTEGER_LITERAL> | <STRING_LITERAL>
}

